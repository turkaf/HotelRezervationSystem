@model List<Room>

@{
    ViewData["Title"] = "Rooms";
    Layout = "~/Views/Shared/_UILayout.cshtml";
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Luxury Accommodations - Grand Hotel Chain</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="stylesheet" href="style.css">
    <style>
        :root {
            --primary-color: #2c3e50;
            --secondary-color: #e67e22;
            --light-gray: #f8f9fa;
            --dark-gray: #2c3e50;
            --white: #ffffff;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Playfair Display', serif;
            background: var(--light-gray);
            color: var(--dark-gray);
            line-height: 1.6;
        }

        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 0 20px;
        }

        .hero-section {
            height: 80vh;
            background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)),
                url('https://images.unsplash.com/photo-1618773928121-c32242e63f39?ixlib=rb-4.0.3');
            background-size: cover;
            background-position: center;
            background-attachment: fixed;
            display: flex;
            align-items: center;
            justify-content: center;
            text-align: center;
            color: var(--white);
        }

        .hero-content h1 {
            font-size: 4.5rem;
            margin-bottom: 1rem;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
            animation: fadeInDown 1s ease;
        }

        .hero-content p {
            font-size: 1.5rem;
            max-width: 800px;
            margin: 0 auto;
            animation: fadeInUp 1s ease;
        }

        .rooms-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(380px, 1fr));
            gap: 40px;
            padding: 80px 20px;
            margin: 0 auto;
            max-width: 1400px;
        }

        .room-card {
            background: var(--white);
            border-radius: 20px;
            overflow: hidden;
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
            position: relative;
        }

        .room-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);
        }

        .room-image-container {
            position: relative;
            height: 300px;
            overflow: hidden;
        }

        .room-image {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.5s ease;
        }

        .room-card:hover .room-image {
            transform: scale(1.1);
        }

        .room-tag {
            position: absolute;
            top: 20px;
            right: 20px;
            background: var(--secondary-color);
            color: var(--white);
            padding: 8px 16px;
            border-radius: 50px;
            font-size: 0.9rem;
        }

        .room-details {
            padding: 30px;
        }

        .room-type {
            font-size: 2rem;
            color: var(--dark-gray);
            margin-bottom: 15px;
        }

        .room-description {
            color: #666;
            margin-bottom: 20px;
            line-height: 1.8;
        }

        .room-features {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 15px;
            margin: 20px 0;
        }

        .feature-item {
            display: flex;
            align-items: center;
            gap: 10px;
            color: #666;
        }

        .feature-item i {
            color: var(--secondary-color);
        }

        .room-price {
            font-size: 2rem;
            color: var(--secondary-color);
            font-weight: bold;
            margin: 20px 0;
        }

        .room-actions {
            display: flex;
            gap: 15px;
        }

        .book-button,
        .details-button {
            padding: 12px 25px;
            border: none;
            border-radius: 50px;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.3s ease;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .book-button {
            background: var(--secondary-color);
            color: var(--white);
            flex: 2;
        }

        .book-button:hover {
            background: var(--dark-gray);
            transform: translateY(-2px);
        }

        .details-button {
            background: var(--light-gray);
            color: var(--dark-gray);
            flex: 1;
        }

        .details-button:hover {
            background: var(--dark-gray);
            color: var(--white);
        }
    </style>
</head>


<body>
    <div class="hero-section">
        <div class="hero-content">
            <h1>Luxurious Accommodations</h1>
            <p>Experience unparalleled comfort and elegance in our carefully curated selection of rooms</p>
        </div>
    </div>

    <div class="rooms-grid">
        @foreach(var item in Model)
        {
            if(item.Status == true)
            {
                <div class="room-card d-flex flex-column">
                    <div class="room-image-container">
                        <img src="@item.Photo" alt="@item.Name"
                             class="room-image">
                        <span class="room-tag">@item.RoomType.TypeName</span>
                    </div>
                    <div class="room-details d-flex flex-column flex-grow-1">
                        <h2 class="room-type">@item.Name</h2>
                        <div class="city-info mb-2">
                            <span class="badge bg-warning">@item.City</span>
                        </div>
                        <p class="room-description flex-grow-1">@item.Description</p>
                        <div class="room-features">
                            @if (item.HasWifi)
                            {
                                <div class="feature-item">
                                    <i class="fas fa-wifi"></i>
                                    <span>Free Wi-Fi</span>
                                </div>
                            }
                            @if (item.HasAirConditioning)
                            {
                                <div class="feature-item">
                                    <i class="fas fa-snowflake"></i>
                                    <span>Air Conditioning</span>
                                </div>
                            }
                            @if (item.HasTV)
                            {
                                <div class="feature-item">
                                    <i class="fas fa-tv"></i>
                                    <span>Smart TV</span>
                                </div>
                            }
                            @if (item.HasMinibar)
                            {
                                <div class="feature-item">
                                    <i class="fas fa-wine-glass-alt"></i>
                                    <span>Minibar</span>
                                </div>
                            }
                        </div>

                        <div class="room-rating mb-2">
                            @if (item.Rating.HasValue)
                            {
                                var rating = item.Rating.Value;
                                var fullStars = (int)rating;
                                var hasHalfStar = (rating % 1 >= 0.25 && rating % 1 < 0.75);
                                var emptyStars = 5 - fullStars - (hasHalfStar ? 1 : 0);

                                for (int i = 0; i < fullStars; i++)
                                {
                                    <i class="fas fa-star text-warning"></i>
                                }

                                if (hasHalfStar)
                                {
                                    <i class="fas fa-star-half-alt text-warning"></i>
                                }

                                for (int i = 0; i < emptyStars; i++)
                                {
                                    <i class="fas fa-star text-muted"></i>
                                }
                            }
                            else
                            {
                                for (int i = 0; i < 5; i++)
                                {
                                    <i class="fas fa-star text-muted"></i>
                                }
                            }
                        </div>

                        <div class="room-price fw-bold mt-3">$@item.PricePerNight/Night</div>
                        <div class="room-actions mt-auto">
                            <button type="button" class="book-button" onclick="window.location.href='@Url.Action("MakeRezervation", "CustomerRooms", new { roomId = item.RoomID, roomName = item.Name, city = item.City, pricePerNight = item.PricePerNight, capacity = item.Capacity })'">Book Now</button>
                            @* <button class="details-button">Details</button> *@
                        </div>
                    </div>
                </div>
            }
        }
    </div>
</body>
</html>